{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","id","payload","concat","toConsumableArray","map","contact","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","protoTypes","PropTypes","object","isRequired","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9a8fc9b4.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contacts => contacts.id !== action.payload)\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [\r\n           \r\n        ],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const res = await axios\r\n            .get('https://jsonplaceholder.typicode.com/users');\r\n\r\n        this.setState({contacts: res.data});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\n\r\n class Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  // onShowClick = e => {\r\n  //   this.setState({showContactInfo: !this.state.showContactInfo});\r\n  // };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try{\r\n     await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n     dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    } catch(e) {\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    }\r\n\r\n    \r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>{name}{' '}<i onClick={() => this.setState({showContactInfo: !this.state.showContactInfo})} className=\"fas fa-sort-down\" style={{ cursor: 'pointer' }}></i>\r\n              <i className=\"fas fa-times\" style={{cursor: 'pointer', float: 'right', color: 'red'}} onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\r\n              <Link to={`contact/edit/${id}`}>\r\n                <i className=\"fas fa-pencil-alt\" style={{cursor: 'pointer', float: 'right', color: 'black', marginRight: '1rem'}}></i>\r\n              </Link>\r\n              </h4>\r\n              {showContactInfo ? (<ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n              </ul>) : null}\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.protoTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-danger\">Contact</span> List\r\n                            </h1>\r\n                            {contacts.map(contact => (\r\n                                <Contact \r\n                                    key={contact.id}\r\n                                    contact={contact} \r\n                                />\r\n                            ))}\r\n                        </React.Fragment>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }             \r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <input type={type} name={name} className={classnames('form-control form-control-lg', {\r\n            'is-invalid': error })} placeholder={placeholder} value={value} onChange={onChange} />\r\n        {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone} = this.state;\r\n\r\n        // Check For Errors\r\n        if (name === '') {\r\n          this.setState({errors: { name: 'Name is required' }});\r\n          return;\r\n        }\r\n\r\n        if (email === '') {\r\n          this.setState({errors: { email: 'Email is required' }});\r\n          return;\r\n        }\r\n\r\n        if (phone === '') {\r\n          this.setState({errors: { phone: 'Phone is required' }});\r\n          return;\r\n        }\r\n\r\n        const newContact = {\r\n          name,\r\n          email,\r\n          phone\r\n        };\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n\r\n          dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n        \r\n\r\n        \r\n\r\n        // Clear State\r\n        this.setState({\r\n          name: '',\r\n          email: '',\r\n          phone: '',\r\n          errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n\r\n    };\r\n\r\n    onChange = e => this.setState({[e.target.name]: e.target.value});\r\n\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup label=\"Name\" name=\"name\" placeholder=\"Enter Name\" value={name} onChange={this.onChange} error={errors.name} />\r\n                    <TextInputGroup label=\"Email\" type=\"email\" name=\"email\" placeholder=\"Enter Email\" value={email} onChange={this.onChange} error={errors.email} />\r\n                    <TextInputGroup label=\"Phone\" name=\"phone\" placeholder=\"Enter Phone\" value={phone} onChange={this.onChange} error={errors.phone} />\r\n                    <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\" />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact = res.data;\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        });\r\n    };\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone} = this.state;\r\n\r\n        // Check For Errors\r\n        if (name === '') {\r\n          this.setState({errors: { name: 'Name is required' }});\r\n          return;\r\n        }\r\n\r\n        if (email === '') {\r\n          this.setState({errors: { email: 'Email is required' }});\r\n          return;\r\n        }\r\n\r\n        if (phone === '') {\r\n          this.setState({errors: { phone: 'Phone is required' }});\r\n          return;\r\n        }\r\n\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data});\r\n\r\n        // Clear State\r\n        this.setState({\r\n          name: '',\r\n          email: '',\r\n          phone: '',\r\n          errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n\r\n    };\r\n\r\n    onChange = e => this.setState({[e.target.name]: e.target.value});\r\n\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup label=\"Name\" name=\"name\" placeholder=\"Enter Name\" value={name} onChange={this.onChange} error={errors.name} />\r\n                    <TextInputGroup label=\"Email\" type=\"email\" name=\"email\" placeholder=\"Enter Email\" value={email} onChange={this.onChange} error={errors.email} />\r\n                    <TextInputGroup label=\"Phone\" name=\"phone\" placeholder=\"Enter Phone\" value={phone} onChange={this.onChange} error={errors.phone} />\r\n                    <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\" />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditContact;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n    const { branding } = props;\r\n    return (\r\n       <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n        <div className=\"container\">\r\n            <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n            <div>\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"></i> Home</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i> Add</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"></i> About</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n       </nav>\r\n    );\r\n};\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport default props => {\r\n    return (\r\n      <div>\r\n        <h1 className=\"display-4\">About Contact Manager</h1>\r\n        <p className=\"lead\">Simple app to manage contacts</p>\r\n        <p className=\"text-secondary\">Version 1.0.0</p>\r\n      </div>\r\n    );\r\n};","import React, { Component } from 'react';\r\n\r\nexport default class NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n        <p className=\"lead\">Sorry, that page does not exist</p>\r\n      </div>\r\n    )\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        body: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n        .then(response => response.json())\r\n        .then(data => this.setState({\r\n            title: data.title,\r\n            body: data.body\r\n        }));\r\n    }\r\n\r\n    // componentWillMount() {\r\n    //     console.log('componentWillMount...');\r\n    // }\r\n\r\n    // componentDidUpdate() {\r\n    //     console.log('componentDidUpdate');\r\n    // }\r\n\r\n    // componentWillUpdate() {\r\n    //     console.log('componentWillUpdate...');\r\n    // }\r\n\r\n    // componentWillReceiveProps(nextProps, nextState) {\r\n    //     console.log('componentWillReceiveProps...');\r\n    // }\r\n\r\n    // static getDerivedStateFromProps(nextProps, prevState){\r\n    //     return null;\r\n    // }\r\n\r\n    // getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    //     console.logs('componentWillReceiveProps...')\r\n    // }\r\n\r\n  render() {\r\n      const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, {Component} from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nimport {Provider} from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return ( \n      <Provider>\n        <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>  \n        </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( <App/>, \ndocument.getElementById('root'));\nserviceWorker.unregister();"],"sourceRoot":""}